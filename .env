import { accountsPage } from "../../../../pages/accounts/AccountsPage"
import { transactionStatusPage } from "../../../../pages/accounts/transactionStatusPage"
import { selectBankAccountPage } from "../../../../pages/bank/SelectBankAccountPage"
import { csrDownloadPage } from "../../../../pages/creditScoreReport/CSRDownloadPage"
import { csrPaymentOptionsPage } from "../../../../pages/creditScoreReport/CSRPaymentOptionsPage"
import { additionalInformationPage } from "../../../../pages/extraDetails/AdditionalInformationPage"
import { footerPage } from "../../../../pages/generic/FooterPage"
import { headerPage } from "../../../../pages/generic/HeaderPage"
import { upiMandatePage } from "../../../../pages/generic/UPIMandatePages"
import { setupAutoInvestPage } from "../../../../pages/gold/Gold-Setup-AutoInvest"
import { goldBuyPage } from "../../../../pages/gold/GoldBuyPage"
import { goldHomePage } from "../../../../pages/gold/GoldHomePage"
import { goldPurchasePage } from "../../../../pages/gold/GoldPurchasePage"
import { goldTransactionHistoryPage } from "../../../../pages/gold/GoldTransactionHistoryPage"
import { addInsuranceAddOnPage } from "../../../../pages/healthCarePlansPage/AddInsuranceAdd-OnPage"
import { healthCarePlansPage } from "../../../../pages/healthCarePlansPage/HealthCarePlansPage"
import { planDetailsPage } from "../../../../pages/healthCarePlansPage/PlanDetailsPage"
import { faqPage } from "../../../../pages/help/FAQPage"
import { helpPage } from "../../../../pages/help/helpPage"
import { homePage } from "../../../../pages/home/HomePage"
import { flexiPersonalLoanInfoPage } from "../../../../pages/information/FlexiPersonalLoanInfoPage"
import { insuranceDetailsPage } from "../../../../pages/insurance/InsuranceDetailsPage"
import { paymentOptionPage } from "../../../../pages/insurance/paymentOptionPage"
import { loanApplicationSubmittedPage } from "../../../../pages/loan/LoanApplicationSubmittedPage"
import { loanPurposePage } from "../../../../pages/loan/LoanPurposePage"
import { signDocumentPage } from "../../../../pages/loan/SignDocumentPage"
import { signLoanDocumentPage } from "../../../../pages/loan/SignLoanDocumentPage"
import { signServiceOTPInputPage } from "../../../../pages/loan/SignServiceOTPInputPage"
import { fplLoanAmountDetailsPage } from "../../../../pages/loan/fpl/FPLLoanAmountDetailsPage"
import { fplLoanAmountTenurePage } from "../../../../pages/loan/fpl/FPLLoanAmountTenurePage"
import { fplPage } from "../../../../pages/loan/fpl/FPLPage"
import { otpInputPage } from "../../../../pages/onboarding/general/OTPInputPage"
import { applicationStatusPage } from "../../../../pages/onboarding/profile/ApplicationStatusPage"
import { profileInformationPage } from "../../../../pages/onboarding/profile/ProfileInformationPage"
import { kycDocumentsPage } from "../../../../pages/onboarding/profile/kyc/KYCDocumentsPage"
import { forecloseLoanPage } from "../../../../pages/repayments/ForecloseLoanPage"
import { repaymentPage } from "../../../../pages/repayments/RepaymentPage"

// KB-T67139 [Cashfree] [GOLD] Check whether "If money has been deducted from your account, it will be refunded back to you within 7 working days" is displayed for NB cashfree when the user fall under retrypayment rolloutPercentage for 24K GOLD
// KB-T67138 [Cashfree] [GOLD] Check on clicking Hard back button in Error Screen for NB cashfree when the user fall under retrypayment rolloutPercentage for 24K GOLD
// KB-T72307 [Payu] [GOLD] Check on clicking Hard back button in Payment Failed screen for NB payu, user should move gold home page when the user fall under retrypayment rolloutPercentage for 24K GOLD
// KB-T72338 [Augmont Gold][PRD]:Check when "Augmont " Global config is disabled Profile is not able to see 24K Gold option Register throw "Augmont gold Partner
// KB-T70184 [Gold Auto Debit Feedback] Verify Feedback screen is displayed on mandate failed screen when transaction is declined from PSP app
// KB-T69120 [Gold Auto Debit] Ensure when server is down, mandate should navigate to the gold homepage with retry button
// KB-T69091[Gold Auto Debit] Ensure when server is down, mandate should navigate to the gold homepage with retry button
// KB-T65837 [Help] Check on clicking help from Home page
// KB-T65838 [Help] Check on clicking help from My Accounts page
// KB-T68888 [Zeplin] Check if the HealthCare purchased plans page is displayed as per Zeplin when the state is in Requested
// KB-T66331 [HC Home Page] Check if the isBestSeller flag is 1 for one plan in kb_hc_plans table, the plan should be selected by default in Healthcare Home Page (Confirmed User)
// KB-T66382 [HC Home Page] Check if the isBestSeller flag is 1 for multiple plans in kb_hc_plans table, the plan should be selected as per DB order in Healthcare Home Page (Confirmed User)
// KB-T66308 [HC Information page] Check on clicking HC option from My Accounts page, it should be redirected to HealthCare information page
// KB-T66306 [HC Information page] Check on clicking HC option from VAS section, it should be redirected to HealthCare information page
// KB-T66383 [HC Home Page] Check if the isBestSeller flag is 0 for all the plans in kb_hc_plans table, the first plan should be selected by default in Healthcare Home Page (Confirmed User)
// KB-T66389 [HC Home Page] Check if only one plan is available, the plan should be displayed in HealthCare home page (Non-Confirmed User)
// KB-T66390 [HC Home Page] Check if only one plan is available, not able to scroll up or down in HealthCare home page (Non-Confirmed User)
// KB-T66391 [HC Home Page] Check if the multiple plans are available, the plans should be displayed in HealthCare home page (Non-Confirmed User)
// KB-T66431 [Zeplin] Check if the HealthCare home page is displayed as per Zeplin when two or more plans are enabled
// KB-T64426 When current installment is overdue but next installment is not overdue then Nudge should be display
// KB-T64427 When current installment is overdue but next installment is also overdue then Nudge should not display
// KB-T70289 Verifying the SME card limit, CTA on pre-confirmation page for New users (don\'t have profile) when global config is enabled.
// KB-T70292 Verifying the SME card limit, CTA on pre-confirmation page for New users (don\'t have profile) when global config is disabled.
// KB-T38613 Ensure that " Ensure the you are either uploading or capturing clear photos of original document" description is displayed in the PAN upload screen
// KB-T38781 Ensure that Gallery option should be displayed to the user after clicking on Upload button from Image file upload option
// KB-T61774 Check whether if user paid other then last EMI then after click on the OK CTA then user should redirect to the Home page of the app
// KB-T61812 Check when user complete the payment using VPA method then the payment successful screen should get the VKYC Nudge screen
// KB-T61814 Check when user complete the payment using Debit card method then the payment successful screen should get the VKYC Nudge screen
// KB-T61815 Check when user complete the payment using Wallet method then the payment successfull screen should get the VKYC Nudge screen
// KB-T61816 Check when user complete the payment using Net Banking method then the payment successful screen should get the VKYC Nudge screen
// 1-KB-T61819 Check whether if user completed the Video KYC from the Repayment trigger then the user should be able to take new loan.
// KB-T63352 Check if the user has never taken Gold where the amount greater then 5 Rs & Gold feature is enabled globally & and user falling under rollout but user vkyc is enable then on clicking OK CTA from the EMI successful screen user should redirect to VKYC Nudge
// KB-T63479 Check user has never visited EM least once & Expense Tracker feature is "disabled "& user falling under rollout then on Clicking OK CTA from the EMI successful screen user should redirect to next applicable nudge module based on the priority set in DB
// KB-T63480 Check user has never visited EM at least once & Expense Tracker feature is enabled & "user not falling under rollout "then on Clicking OK CTA from the EMI successful screen user should redirect to next applicable nudge module based on priority set in DB
// KB-T69052 Ensure checkout product is displaying proper order when locked and unlocked priority is set.


describe('VAS MODULE', () =>{
    
    it('KB-T72338 [Augmont Gold][PRD]:Check when "Augmont " Global config is disabled Profile is not able to see 24K Gold option Register throw "Augmont gold Partner', () =>{
        cy.intercept('GET', '**/main/home', {fixture: 'home/homePage-GoldOptionNotThere.json'}).as('getHomePage')
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyGetNowBtn('GET NOW')
        homePage.verifyGoldIconDisabled()
    })
    it('KB-T67139 [Cashfree] [GOLD] Check whether "If money has been deducted from your account, it will be refunded back to you within 7 working days" is displayed for NB cashfree when the user fall under retrypayment rolloutPercentage for 24K GOLD', () =>{
        cy.intercept('GET', '**/main/home', {fixture: 'home/homePage-GOLDNBFailedauto2.json'}).as('getHomePage')
        cy.intercept('GET', '**/vasgold/digitalgold/home', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Home.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/investment/details', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Details.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/transaction/eligibility', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Eligliblity.json'})
        cy.intercept('GET', '**/ecom/offers?type=**', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Offers.json'})
        cy.intercept('GET', '**/vas/redeemPoints?type=digitalGold', {fixture: 'gold/goldBuyPage-GOLDNBFailedRedeemPoints.json'})
        cy.intercept('POST', '**/vasgold/digitalgold/calculator', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2Calculator.json'})
        cy.intercept('POST', '**/vasgold/digitalgold/transaction/buy/verify', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2Verify.json'})
        cy.intercept('GET', '**/vaspg/me/payment?v=**', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2PaymenetV.json'})
        cy.intercept('POST', '**/vas/vaspayment?type=digitalGold&source=app', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2vasPayment.json'})
        cy.intercept('POST', '**/vas/me/geo', {fixture: 'gold/goldBuyPage-GOLDNBFailedmeGeo.json'})
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verify24KGoldText('24K Gold')
        homePage.clickGoldIcon()
        goldHomePage.verifyPageTitle('24K Digital Gold')
        goldHomePage.clickInvest24KGoldLabel()
        goldBuyPage.verifyPageTitle('24K Digital Gold')
        goldBuyPage.clickBuyButton()
        
        goldPurchasePage.verifyPageTitle('Purchase')
        goldPurchasePage.clickNetBankinglbl()
        paymentOptionPage.clickSBIBankText()
       
        cy.wait(2000 )
        goldTransactionHistoryPage.verifyOKBtn('OK')
        goldTransactionHistoryPage.verifyAmountDeducedText('If money has been deducted from your account, it will be updated in your loan within  48 hours  or refunded back to you in 7 working days')
        goldTransactionHistoryPage.verifyErrorImage('https://ik.imagekit.io/kreditbee/app-static/icons/E/ic-error1.svg')
        goldTransactionHistoryPage.clickOKBtn()
        homePage.clickGoldIcon()
        goldHomePage.verifyPageTitle('24K Digital Gold')
    })
    it('KB-T67138 [Cashfree] [GOLD] Check on clicking Hard back button in Error Screen for NB cashfree when the user fall under retrypayment rolloutPercentage for 24K GOLD', () =>{
        cy.intercept('GET', '**/main/home', {fixture: 'home/homePage-GOLDNBFailedauto2.json'}).as('getHomePage')
        cy.intercept('GET', '**/vasgold/digitalgold/home', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Home.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/investment/details', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Details.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/transaction/eligibility', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Eligliblity.json'})
        cy.intercept('GET', '**/ecom/offers?type=**', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Offers.json'})
        cy.intercept('GET', '**/vas/redeemPoints?type=digitalGold', {fixture: 'gold/goldBuyPage-GOLDNBFailedRedeemPoints.json'})
        cy.intercept('POST', '**/vasgold/digitalgold/calculator', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2Calculator.json'})
        cy.intercept('POST', '**/vasgold/digitalgold/transaction/buy/verify', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2Verify.json'})
        cy.intercept('GET', '**/vaspg/me/payment?v=**', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2PaymenetV.json'})
        cy.intercept('GET', '**/vas/me/tnc?consent=gold_purchase_augmont', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2Tnc.json'})
        cy.intercept('POST', '**/vas/vaspayment?type=digitalGold&source=app', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2vasPayment.json'})
        cy.intercept('GET', '**/vaspg/me/payment/order?d=**', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2Order.json'})
        cy.intercept('POST', '**/vas/me/geo', {fixture: 'gold/goldBuyPage-GOLDNBFailedmeGeo.json'})
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verify24KGoldText('24K Gold')
        homePage.clickGoldIcon()
        goldHomePage.verifyPageTitle('24K Digital Gold')
        goldHomePage.clickInvest24KGoldLabel()
        goldBuyPage.verifyPageTitle('24K Digital Gold')
        goldBuyPage.clickBuyButton()
        
        goldPurchasePage.verifyPageTitle('Purchase')
        goldPurchasePage.clickNetBankinglbl()
        paymentOptionPage.clickSBIBankText()
       
        goldTransactionHistoryPage.verifyOKBtn('OK')
        goldTransactionHistoryPage.verifyAmountDeducedText('If money has been deducted from your account, it will be updated in your loan within  48 hours  or refunded back to you in 7 working days')
        goldTransactionHistoryPage.verifyErrorImage('https://ik.imagekit.io/kreditbee/app-static/icons/E/ic-error1.svg')
        goldTransactionHistoryPage.clickOKBtn()
        cy.wait(2000 )
        homePage.clickGoldIcon()
        goldHomePage.verifyPageTitle('24K Digital Gold')
    })
    it('KB-T72307 [Payu] [GOLD] Check on clicking Hard back button in Payment Failed screen for NB payu, user should move gold home page when the user fall under retrypayment rolloutPercentage for 24K GOLD', () =>{
        cy.intercept('GET', '**/main/home', {fixture: 'home/homePage-GOLDNBFailedauto2.json'}).as('getHomePage')
        cy.intercept('GET', '**/vasgold/digitalgold/home', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Home.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/investment/details', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Details.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/transaction/eligibility', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Eligliblity.json'})
        cy.intercept('GET', '**/ecom/offers?type=**', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Offers.json'})
        cy.intercept('GET', '**/vas/redeemPoints?type=digitalGold', {fixture: 'gold/goldBuyPage-GOLDNBFailedRedeemPoints.json'})
        cy.intercept('POST', '**/vasgold/digitalgold/calculator', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2Calculator.json'})
        cy.intercept('POST', '**/vasgold/digitalgold/transaction/buy/verify', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2Verify.json'})
        cy.intercept('GET', '**/vaspg/me/payment?v=**', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2PaymenetV.json'})
        cy.intercept('GET', '**/vas/me/tnc?consent=gold_purchase_augmont', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2Tnc.json'})
        cy.intercept('POST', '**/vas/vaspayment?type=digitalGold&source=app', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2vasPayment.json'})
        cy.intercept('GET', '**/vaspg/me/payment/order?d=**', {fixture: 'gold/goldBuyPage-GOLDNBFailedauto2Order.json'})
        cy.intercept('POST', '**/vas/me/geo', {fixture: 'gold/goldBuyPage-GOLDNBFailedmeGeo.json'})
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verify24KGoldText('24K Gold')
        homePage.clickGoldIcon()
        goldHomePage.verifyPageTitle('24K Digital Gold')
        goldHomePage.clickInvest24KGoldLabel()
        goldBuyPage.verifyPageTitle('24K Digital Gold')
        goldBuyPage.clickBuyButton()
        goldPurchasePage.verifyPageTitle('Purchase')
        goldPurchasePage.clickNetBankinglbl()
        paymentOptionPage.clickSBIBankText()
       
        goldTransactionHistoryPage.verifyOKBtn('OK')
        goldTransactionHistoryPage.verifyAmountDeducedText('If money has been deducted from your account, it will be updated in your loan within  48 hours  or refunded back to you in 7 working days')
        goldTransactionHistoryPage.verifyErrorImage('https://ik.imagekit.io/kreditbee/app-static/icons/E/ic-error1.svg')
        goldTransactionHistoryPage.clickOKBtn()
        homePage.clickGoldIcon()
        goldHomePage.verifyPageTitle('24K Digital Gold')
    })
    it('KB-T72338 [Augmont Gold][PRD]:Check when "Augmont " Global config is disabled Profile is not able to see 24K Gold option Register throw "Augmont gold Partner', () =>{
        cy.intercept('GET', '**/main/home', {fixture: 'home/homePage-GoldOptionNotThere.json'}).as('getHomePage')
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyGetNowBtn('GET NOW')
        homePage.verifyGoldIconDisabled()
    })
    it('KB-T70184 [Gold Auto Debit Feedback] Verify Feedback screen is displayed on mandate failed screen when transaction is declined from PSP app', () =>{
        cy.intercept('GET', '**/main/home', {fixture: 'home/homePage-GOLDNBFailedauto2.json'}).as('getHomePage')
        cy.intercept('GET', '**/vasgold/digitalgold/home', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Home.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/investment/details', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Details.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/transaction/eligibility', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Eligliblity.json'})
        cy.intercept('GET', '**/ecom/offers?type=**', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Offers.json'})
        cy.intercept('GET', '**/vas/me/tnc?consent=gold_autoinvest', {fixture: 'gold/goldBuyPage-tncAutoInvestForFailed.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/investment/home', {fixture: 'gold/goldBuyPage-goldInvestmentsforFailed.json'})
        cy.intercept('POST', '**/vas/me/tnc/gold_autoinvest', {fixture: 'gold/goldBuyPage-tncForFailed.json'})
        cy.intercept('POST', '**/vas/upimandate/description?source=vas&module=gold', {fixture: 'gold/goldBuyPage-descreptionForFailed.json'})
        cy.intercept('POST', '**/vas/upimandate/verifyVPA', {fixture: 'gold/goldBuyPage-verifyVPAforFailed.json'})
        cy.intercept('POST', '**/vas/upimandate/registermandate', {fixture: 'gold/goldBuyPage-registermandateforFailed.json'})
        cy.intercept('POST', '**/vas/upimandate/mandatestatus', {fixture: 'gold/goldBuyPage-mandateStatusFailed.json'})
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verify24KGoldText('24K Gold')
        homePage.clickGoldIcon()
        goldHomePage.verifyPageTitle('24K Digital Gold')
        goldHomePage.clickInvestNowBtn()
        setupAutoInvestPage.verifyPageTitle('Setup Auto-Invest')
        setupAutoInvestPage.clickCheckBox()
        setupAutoInvestPage.clickContinueBtn()
        upiMandatePage.verifyPageTitle('UPI Mandate')
        upiMandatePage.enterUpiId('dubeyakshat88@oksbi')
        upiMandatePage.clickVerifyBtn()
        upiMandatePage.clickContinueBtn()
        goldPurchasePage.verifyChangePaymentTypeBtn('Cancel')
        goldPurchasePage.verifyRetryWithUPIBtn('Retry')
        upiMandatePage.verifyModifyInvestSuccessLabel('Mandate Registration Failed')
        goldTransactionHistoryPage.verifyErrorImage('https://ik.imagekit.io/kreditbee/app-static/icons/E/ic-error1.svg')
        goldPurchasePage.clickChangePaymentTypeBtn()
        cy.wait(2000 )
        goldHomePage.verifyPageTitle('24K Digital Gold')
    })
    it('KB-T69120 [Gold Auto Debit] Ensure when server is down, mandate should navigate to the gold homepage with retry button', () =>{
        cy.intercept('GET', '**/main/home', {fixture: 'home/homePage-GOLDNBFailedauto2.json'}).as('getHomePage')
        cy.intercept('GET', '**/vasgold/digitalgold/home', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Home.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/investment/details', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Details.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/transaction/eligibility', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Eligliblity.json'})
        cy.intercept('GET', '**/ecom/offers?type=**', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Offers.json'})
        cy.intercept('GET', '**/vas/me/tnc?consent=gold_autoinvest', {fixture: 'gold/goldBuyPage-tncAutoInvestForFailed.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/investment/home', {fixture: 'gold/goldBuyPage-goldInvestmentsforFailed.json'})
        cy.intercept('POST', '**/vas/me/tnc/gold_autoinvest', {fixture: 'gold/goldBuyPage-tncForFailed.json'})
        cy.intercept('POST', '**/vas/upimandate/description?source=vas&module=gold', {fixture: 'gold/goldBuyPage-descreptionForFailed.json'})
        cy.intercept('POST', '**/vas/upimandate/verifyVPA', {fixture: 'gold/goldBuyPage-verifyVPAforFailed.json'})
        cy.intercept('POST', '**/vas/upimandate/registermandate', {fixture: 'gold/goldBuyPage-registermandateforFailed.json'})
        cy.intercept('POST', '**/vas/upimandate/mandatestatus', {fixture: 'gold/goldBuyPage-mandateStatusFailed.json'})
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verify24KGoldText('24K Gold')
        homePage.clickGoldIcon()
        goldHomePage.verifyPageTitle('24K Digital Gold')
        goldHomePage.clickInvestNowBtn()
        setupAutoInvestPage.verifyPageTitle('Setup Auto-Invest')
        setupAutoInvestPage.clickCheckBox()
        setupAutoInvestPage.clickContinueBtn()
        upiMandatePage.verifyPageTitle('UPI Mandate')
        upiMandatePage.enterUpiId('dubeyakshat88@oksbi')
        upiMandatePage.clickVerifyBtn()
        upiMandatePage.clickContinueBtn()
        goldPurchasePage.verifyChangePaymentTypeBtn('Cancel')
        goldPurchasePage.verifyRetryWithUPIBtn('Retry')
        upiMandatePage.verifyModifyInvestSuccessLabel('Mandate Registration Failed')
        goldTransactionHistoryPage.verifyErrorImage('https://ik.imagekit.io/kreditbee/app-static/icons/E/ic-error1.svg')
        goldPurchasePage.clickChangePaymentTypeBtn()
        cy.wait(2000 )
        goldHomePage.verifyPageTitle('24K Digital Gold')
    })
    //on hold internal server coming after autodebit
    it.skip('KB-T69091[Gold Auto Debit] Ensure when server is down, mandate should navigate to the gold homepage with retry button', () =>{
        cy.intercept('GET', '**/main/home', {fixture: 'home/homePage-GOLDNBFailedauto2.json'}).as('getHomePage')
        cy.intercept('GET', '**/vasgold/digitalgold/home', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Home.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/investment/details', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Details.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/transaction/eligibility', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Eligliblity.json'})
        cy.intercept('GET', '**/ecom/offers?type=**', {fixture: 'gold/goldHomePage-GOLDNBFailedauto2Offers.json'})
        cy.intercept('GET', '**/vas/me/tnc?consent=gold_autoinvest', {fixture: 'gold/goldBuyPage-tncAutoInvestForFailed.json'})
        cy.intercept('GET', '**/vasgold/digitalgold/investment/home', {fixture: 'gold/goldBuyPage-goldInvestmentsforFailed.json'})
        cy.intercept('POST', '**/vas/me/tnc/gold_autoinvest', {fixture: 'gold/goldBuyPage-tncForFailed.json'})
        cy.intercept('POST', '**/vas/upimandate/description?source=vas&module=gold', {fixture: 'gold/goldBuyPage-descreptionForSuccess.json'})
        cy.intercept('POST', '**/vas/upimandate/verifyVPA', {fixture: 'gold/goldBuyPage-verifyVPAforSuccess.json'})
        cy.intercept('POST', '**/vas/upimandate/registermandate', {fixture: 'gold/goldBuyPage-registermandateforSuccess.json'})
        cy.intercept('POST', '**/vas/upimandate/mandatestatus', {fixture: 'gold/goldBuyPage-mandateStatusSuccedd.json'})
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verify24KGoldText('24K Gold')
        homePage.clickGoldIcon()
        goldHomePage.verifyPageTitle('24K Digital Gold')
        goldHomePage.clickInvestNowBtn()
        setupAutoInvestPage.verifyPageTitle('Setup Auto-Invest')
        setupAutoInvestPage.clickCheckBox()
        setupAutoInvestPage.clickContinueBtn()
        upiMandatePage.verifyPageTitle('UPI Mandate')
        upiMandatePage.enterUpiId('dubeyakshat88@oksbi')
        upiMandatePage.clickVerifyBtn()
        upiMandatePage.clickContinueBtn()
        goldPurchasePage.verifyChangePaymentTypeBtn('Cancel')
        goldPurchasePage.verifyRetryWithUPIBtn('Retry')
        upiMandatePage.verifyModifyInvestSuccessLabel('Mandate Registration Failed')
        goldTransactionHistoryPage.verifyErrorImage('https://ik.imagekit.io/kreditbee/app-static/icons/E/ic-error1.svg')
        goldPurchasePage.clickChangePaymentTypeBtn()
        cy.wait(2000 )
        goldHomePage.verifyPageTitle('24K Digital Gold')
    })
    // healthcare
    it('KB-T68888 [Zeplin] Check if the HealthCare purchased plans page is displayed as per Zeplin when the state is in Requested', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCareRequstedState.json' }).as('getHomePage')
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareRequstedStateOffers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareRequstedStatePlans.json' })
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        homePage.clickHealthCareLabel()
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')
        healthCarePlansPage.verifyHeathCareSilverLabel('Healthcare Silver')
        healthCarePlansPage.verifyHeathCareGoldLabel('Healthcare Gold')
        healthCarePlansPage.verifyHeathCarePlatinumLabel('Healthcare Platinum')
        
    })
    it('KB-T66331 [HC Home Page] Check if the isBestSeller flag is 1 for one plan in kb_hc_plans table, the plan should be selected by default in Healthcare Home Page (Confirmed User)', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCareRequstedStateSubs.json' }).as('getHomePage')
        cy.intercept('POST', '**main/me/overlay', { fixture: 'home/homePage-healthCareRequstedStateOverlay.json' })
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareRequstedStateOffers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareRequstedStatePlans.json' })
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        homePage.clickHealthCareLabel()
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')
        healthCarePlansPage.verifyHealthcareSilverText('Healthcare Silver')
        healthCarePlansPage.verifyHeathCareGoldLabel('Healthcare Gold')
        healthCarePlansPage.verifyHeathCarePlatinumLabel('Healthcare Platinum')
        
    })
    it('KB-T66382 [HC Home Page] Check if the isBestSeller flag is 1 for multiple plans in kb_hc_plans table, the plan should be selected as per DB order in Healthcare Home Page (Confirmed User)', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCareRequstedStateSubs.json' }).as('getHomePage')
        cy.intercept('GET', '**/myaccount', {fixture: 'accounts/accountPage-checkHelp.json'})
        cy.intercept('POST', '**main/me/overlay', { fixture: 'home/homePage-healthCareRequstedStateOverlay.json' })
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareRequstedStateOffers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareRequstedStatePlans.json' })
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        footerPage.clickAccountLabel()
        
        accountsPage.verifyHealthCareLabel('Healthcare Plans')
        accountsPage.clickHealthCareLabel()
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')
        healthCarePlansPage.verifyHealthcareSilverText('Healthcare Silver')
        healthCarePlansPage.verifyHeathCareGoldLabel('Healthcare Gold')
        healthCarePlansPage.verifyHeathCarePlatinumLabel('Healthcare Platinum')
        
    })
    it('KB-T66308 [HC Information page] Check on clicking HC option from My Accounts page, it should be redirected to HealthCare information page', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCareRequstedStateSubs.json' }).as('getHomePage')
        cy.intercept('GET', '**/myaccount', {fixture: 'accounts/accountPage-checkHelp.json'})
        cy.intercept('POST', '**main/me/overlay', { fixture: 'home/homePage-healthCareRequstedStateOverlay.json' })
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareRequstedStateOffers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareRequstedStatePlans.json' })
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        footerPage.clickAccountLabel()
        
        accountsPage.verifyHealthCareLabel('Healthcare Plans')
        accountsPage.clickHealthCareLabel()
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')
        healthCarePlansPage.verifyHealthcareSilverText('Healthcare Silver')
        healthCarePlansPage.verifyHeathCareGoldLabel('Healthcare Gold')
        healthCarePlansPage.verifyHeathCarePlatinumLabel('Healthcare Platinum')
        
    })
    it('KB-T66306 [HC Information page] Check on clicking HC option from VAS section, it should be redirected to HealthCare information page', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCareRequstedStateSubs.json' }).as('getHomePage')
        cy.intercept('GET', '**/myaccount', {fixture: 'accounts/accountPage-checkHelp.json'})
        cy.intercept('POST', '**main/me/overlay', { fixture: 'home/homePage-healthCareRequstedStateOverlay.json' })
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareRequstedStateOffers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareRequstedStatePlans.json' })
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        footerPage.clickAccountLabel()
        
        accountsPage.verifyHealthCareLabel('Healthcare Plans')
        accountsPage.clickHealthCareLabel()
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')
        healthCarePlansPage.verifyHealthcareSilverText('Healthcare Silver')
        healthCarePlansPage.verifyHeathCareGoldLabel('Healthcare Gold')
        healthCarePlansPage.verifyHeathCarePlatinumLabel('Healthcare Platinum')
        
        
    })
    it('KB-T66383 [HC Home Page] Check if the isBestSeller flag is 0 for all the plans in kb_hc_plans table, the first plan should be selected by default in Healthcare Home Page (Confirmed User)', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCareBestSeller0.json' }).as('getHomePage')
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareBestSeller0Offfers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareBestSeller0Plans.json' })
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        homePage.clickHealthCareLabel()
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')   
        healthCarePlansPage.verifyHealthcareSilverText('Healthcare Silver')
        healthCarePlansPage.verifyHealthCareSilverRadioBtn('https://ik.imagekit.io/kreditbee/app-static/new_ui_enhancements/R/ic-radiobutton-active.svg')
    })
    it('KB-T66389 [HC Home Page] Check if only one plan is available, the plan should be displayed in HealthCare home page (Non-Confirmed User)', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCareBestSeller0.json' }).as('getHomePage')
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareBestSeller0Offfers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareonePlanOnly.json' }).as('getHealthCarePage')
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        homePage.clickHealthCareLabel()
        cy.wait('@getHealthCarePage')
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')
        
        healthCarePlansPage.verifyHealthCareSilverRadioBtn('https://ik.imagekit.io/kreditbee/app-static/new_ui_enhancements/R/ic-radiobutton-active.svg')
        healthCarePlansPage.verifyHeathCareGoldLabel('Healthcare Gold')

    })
    it('KB-T66390 [HC Home Page] Check if only one plan is available, not able to scroll up or down in HealthCare home page (Non-Confirmed User)', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCareBestSeller0.json' }).as('getHomePage')
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareBestSeller0Offfers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareonePlanOnly.json' }).as('getHealthCarePage')
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        homePage.clickHealthCareLabel()
        cy.wait('@getHealthCarePage')
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')
        
        healthCarePlansPage.verifyHealthCareSilverRadioBtn('https://ik.imagekit.io/kreditbee/app-static/new_ui_enhancements/R/ic-radiobutton-active.svg')
        healthCarePlansPage.verifyHeathCareGoldLabel('Healthcare Gold')

    })
    it('KB-T66391 [HC Home Page] Check if the multiple plans are available, the plans should be displayed in HealthCare home page (Non-Confirmed User)', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCarenonConfirmUser.json' }).as('getHomePage')
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareBestSeller0Offfers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCarenonConfirmUserPlans.json' }).as('getHealthCarePage')
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyUnableOfferLoanText('We are unable to offer you a Loan at this time either due to anomalies in your profile or repayment behaviour as per Bureau. You can improve your credit profile and try again after 6 months. We regret any inconvenience caused.')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        homePage.clickHealthCareLabel()
        cy.wait('@getHealthCarePage')
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')
        healthCarePlansPage.verifyHeathCareGoldLabel('Healthcare Gold')
        healthCarePlansPage.verifyHealthcareSilverText('Healthcare Silver')
        healthCarePlansPage.verifyHealthCareSilverRadioBtn('https://ik.imagekit.io/kreditbee/app-static/new_ui_enhancements/R/ic-radiobutton-active.svg')
        healthCarePlansPage.verifyHeathCarePlatinumLabel('Healthcare Platinum')
        
        
    })
    it('KB-T66304 [HC Purchased Plan Page] Check if Active plans should not be displayed in inactive covers page', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCareActiveInactive.json' }).as('getHomePage')
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareActiveInactivePlans.json' }).as('getInactiveCoverPage')
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        homePage.clickHealthCareLabel()
        // cy.wait('@getInactiveCoverPage')
        // healthCarePlansPage.verifyInactivePlansLabel('Inactive Covers')
        // healthCarePlansPage.verifyActiveGoldPlanLabel('Healthcare Gold')
        // healthCarePlansPage.verifyActiveLabel('Active')
        // healthCarePlansPage.clickInactivePlansLabel()
        // insuranceDetailsPage.verifyInsuranceTitle('Inactive Covers')
        // healthCarePlansPage.verifyActiveGoldPlanLabelNotExist()
        // healthCarePlansPage.verifyActiveLabelNotExist()
    })
    it('KB-T66387 [HC Home Page] Check if no plans is available, \'This feature is currently not available\' screen should be displayed (Non-Confirmed User)', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCarenonConfirmUser.json' }).as('getHomePage')
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareBestSeller0Offfers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCarenonConfirmUserPlans.json' }).as('getHealthCarePage')
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyUnableOfferLoanText('We are unable to offer you a Loan at this time either due to anomalies in your profile or repayment behaviour as per Bureau. You can improve your credit profile and try again after 6 months. We regret any inconvenience caused.')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        homePage.clickHealthCareLabel()
        cy.wait('@getHealthCarePage')
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')
        healthCarePlansPage.verifyHeathCareGoldLabel('Healthcare Gold')
        healthCarePlansPage.verifyHealthcareSilverText('Healthcare Silver')
        healthCarePlansPage.verifyHealthCareSilverRadioBtn('https://ik.imagekit.io/kreditbee/app-static/new_ui_enhancements/R/ic-radiobutton-active.svg')
        healthCarePlansPage.verifyHeathCarePlatinumLabel('Healthcare Platinum')
        healthCarePlansPage.clickHealthCarePlan4SelectPlanBtn()
        insuranceDetailsPage.verifyInsuranceTitle('Plan Details')
        planDetailsPage.clickContinueBtn()
        // addInsuranceAddOnPage.verifyPageTitle('Add Insurance Add-On')
        additionalInformationPage.clickContinueBtn()
        insuranceDetailsPage.verifyInsuranceTitle('Personal Details')
        cy.go(-1)
        cy.go(-1)
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareRequstedStatErrorOffers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareRequstedStateErrorPlans.json' })
        cy.go(-1)
        homePage.verifySuccessfullyRecievedText('This feature is currentlynot available')
        homePage.verifySuccessfullyRecievedDescText('Please try again after sometime.')
        homePage.clickOKBtn()
        homePage.verifyUnableOfferLoanText('We are unable to offer you a Loan at this time either due to anomalies in your profile or repayment behaviour as per Bureau. You can improve your credit profile and try again after 6 months. We regret any inconvenience caused.')
    })
    it('KB-T66388 [HC Home Page] Check on clicking ok from \'This feature is currently not available\' screen , it should be redirected to KB home page (Non-Confirmed User)', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCarenonConfirmUser.json' }).as('getHomePage')
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareBestSeller0Offfers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCarenonConfirmUserPlans.json' }).as('getHealthCarePage')
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyUnableOfferLoanText('We are unable to offer you a Loan at this time either due to anomalies in your profile or repayment behaviour as per Bureau. You can improve your credit profile and try again after 6 months. We regret any inconvenience caused.')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        homePage.clickHealthCareLabel()
        cy.wait('@getHealthCarePage')
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')
        healthCarePlansPage.verifyHeathCareGoldLabel('Healthcare Gold')
        healthCarePlansPage.verifyHealthcareSilverText('Healthcare Silver')
        healthCarePlansPage.verifyHealthCareSilverRadioBtn('https://ik.imagekit.io/kreditbee/app-static/new_ui_enhancements/R/ic-radiobutton-active.svg')
        healthCarePlansPage.verifyHeathCarePlatinumLabel('Healthcare Platinum')
        healthCarePlansPage.clickHealthCarePlan4SelectPlanBtn()
        insuranceDetailsPage.verifyInsuranceTitle('Plan Details')
        planDetailsPage.clickContinueBtn()
        // addInsuranceAddOnPage.verifyPageTitle('Add Insurance Add-On')
        additionalInformationPage.clickContinueBtn()
        insuranceDetailsPage.verifyInsuranceTitle('Personal Details')
        cy.go(-1)
        cy.go(-1)

        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareRequstedStatErrorOffers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareRequstedStateErrorPlans.json' })
        cy.go(-1)
        homePage.verifySuccessfullyRecievedText('This feature is currentlynot available')
        homePage.verifySuccessfullyRecievedDescText('Please try again after sometime.')
        homePage.clickOKBtn()
        homePage.verifyUnableOfferLoanText('We are unable to offer you a Loan at this time either due to anomalies in your profile or repayment behaviour as per Bureau. You can improve your credit profile and try again after 6 months. We regret any inconvenience caused.') 
    })
    it('KB-T66431 [Zeplin] Check if the HealthCare home page is displayed as per Zeplin when two or more plans are enabled', () =>{
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-healthCareRequstedStateSubs.json' }).as('getHomePage')
        cy.intercept('GET', '**/myaccount', {fixture: 'accounts/accountPage-checkHelp.json'})
        cy.intercept('POST', '**main/me/overlay', { fixture: 'home/homePage-healthCareRequstedStateOverlay.json' })
        cy.intercept('GET', '**/ecom/offers?type=healthcareHomeBanner', { fixture: 'home/homePage-healthCareRequstedStateOffers.json' })
        cy.intercept('GET', '**/vas/hc/plans', { fixture: 'home/homePage-healthCareRequstedStatePlans.json' })
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyHealthCareLabel('Healthcare Plans')
        footerPage.clickAccountLabel()
        
        accountsPage.verifyHealthCareLabel('Healthcare Plans')
        accountsPage.clickHealthCareLabel()
        healthCarePlansPage.verifyPageTitle('Healthcare Plans')
        healthCarePlansPage.verifyHealthcareSilverText('Healthcare Silver')
        healthCarePlansPage.verifyHeathCareGoldLabel('Healthcare Gold')
        healthCarePlansPage.verifyHeathCarePlatinumLabel('Healthcare Platinum')
    })
})
describe('PAYMENT GATEWAY', () =>{
    it('KB-T61774 Check whether if user paid other then last EMI then after click on the OK CTA then user should redirect to the Home page of the app', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
    it('KB-T61812 Check when user complete the payment using VPA method then the payment successful screen should get the VKYC Nudge screen', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
    it('KB-T61814 Check when user complete the payment using Debit card method then the payment successful screen should get the VKYC Nudge screen', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
    it('KB-T61815 Check when user complete the payment using Wallet method then the payment successfull screen should get the VKYC Nudge screen', () =>{
        cy.intercept('GET', '**/home', {fixture: 'home/homePage-WalletOptionBand2250.json'}).as('getHomePage')
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-WalletOptionBand2250Loans.json'}).as('getHomePage')
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-WalletOptionBand2250LoanId.json'}).as('getHomePage')
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-WalletOptionBand2250Payment.json'}).as('getHomePage')
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyWalletLbl('Wallets')
        paymentOptionPage.verifyDebitCardSubText('Small conv fee will be charged')
        paymentOptionPage.clickWalletBtn()
        paymentOptionPage.verifyAmountSubText(' A small Convenience Fee will be charged during the payment process. Use Bank Transfer option to reduce the fee Know More')
        paymentOptionPage.verifyAmountLabel('Amount')         
    })
    it('KB-T61816 Check when user complete the payment using Net Banking method then the payment successful screen should get the VKYC Nudge screen', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickNetBankingLabel()
        paymentOptionPage.verifykSBIBankText('SBI')
    })
    it("1-KB-T61819 Check whether if user completed the Video KYC from the Repayment trigger then the user should be able to take new loan.",()=>{
        cy.intercept('**/home', { fixture: 'home/homePage-MLAX15K-Overdue.json' })
        cy.intercept('**/me/loan?id=**', { fixture: 'repayments/repayment-MLAX15K-Overdue.json' })
        cy.intercept('**/me/loans', { fixture: 'repayments/repayment-MLAX15K-Loan-Overdue.json' })
        cy.intercept('**/pg/me/payment?v=**&reqId=**&type=', { fixture: 'payments/PaymentPage-MLAX15K-Overdue.json' })
        cy.visitURL('newhome')
        footerPage.clickRepaymentIcon()
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyAmountLabel('Amount')
        csrPaymentOptionsPage.verifyDebitCardText('Debit Card')
        csrPaymentOptionsPage.clickDebitCardLabel()
        csrPaymentOptionsPage.clickPayWithDebitCardBtn()
        transactionStatusPage.verifyPageTitleText('Payment Amount')
    })
    it('2-KB-T61819 Check whether if user completed the Video KYC from the Repayment trigger then the user should be able to take new loan.', () => {
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', { fixture: '/repayments/repaymentsPage-PartialPaymentNotDisplay-S53-Loans.json' })
        cy.intercept('GET', '**/me/loan?id=**', { fixture: 'repayments/repaymentPage-LoanId-CurrentDateBefore-ThirdEmi.json' })
        cy.intercept('GET', '**/me/payment?v=**', { fixture: '/repayments/paymentOption-PartialPaymentNotDisplay-S53-Payment.json' })
        cy.visitURL('/newhome')
        footerPage.clickRepaymentIcon()
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.clickPayNowBtn()
        forecloseLoanPage.clickPayNowBtn()
        paymentOptionPage.verifyTitlePaymentOptionPage('Payment Option')
        paymentOptionPage.verifyAmountLabel('Amount')
        csrPaymentOptionsPage.verifyDebitCardText('Debit Card')
        csrPaymentOptionsPage.clickDebitCardLabel()
        csrPaymentOptionsPage.clickPayWithDebitCardBtn()
        transactionStatusPage.verifyPageTitleText('Payment Amount')
    })
    it('3-KB-T61819 Check whether if user completed the Video KYC from the Repayment trigger then the user should be able to take new loan.', () => {
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-loanAmteqlminAmount.json' }).as('getHomePage')
        cy.intercept('GET', '**/category-main?name=**', { fixture: 'loan/fplLoanPage-loanAmteqlminAmountCategory.json' })
        cy.intercept('GET', '**/ecom/offers?type=preloanBanner', { fixture: 'loan/fpl/fplLoanPage-reAssessmentFeeChargedOffers.json' })
        cy.intercept('GET', '**/main/preloanre?productId=**', { fixture: 'loan/fpl/fplLoanPage-reAssessmentFeeChargedPrelonare.json' })
        cy.intercept('GET', '**/products?productId=**', { fixture: 'loan/fpl/fplLoanPage-loanAmteqlminAmount.json' })
        cy.intercept('GET', '**/me/vkycNudgeStatus?type=**', { fixture: 'loan/fpl/fplLoanPage-MLA-8K-VKYC-vkycNudgeStatus.json' })
        cy.intercept('GET', '**/products/calcfees?productid=**', { fixture: 'loan/fpl/loanAmountPage-loanAmteqlminAmountCalcfees.json' })
        cy.intercept('GET', '**/me/tnc?consent=**', { fixture: 'loan/fpl/selectLoanPurposePage-reAssessmentFeeChargedTnc.json' })
        cy.intercept('GET', '**/me/bank?productid=**', { fixture: 'loan/fpl/bankAccountPage-noTechErrorBank.json' }).as('getBankPage')
        cy.intercept('GET', '**/loan/la?updateMFILimit=**', { fixture: 'loan/fpl/signDocPage-couponMLA8KVKYC-loan.json' })
        cy.intercept('GET', '**/loan/la?type=**', { fixture: 'loan/fpl/KFS&SanctionPage-loanAmteqlminAmountLa.json' }).as('getSanctionPage')
        cy.intercept('GET', '**/me/tnc?consent=loanSanctionLetter', { fixture: 'loan/fpl/KFS&SanctionPage-reAssessmentFeeChargedtncloan.json' })
        cy.intercept('POST', '**/me/tnc', { fixture: 'loan/fpl/singServicePage-couponMLA8KVKYC-tnc.json' })
        cy.intercept('GET', '**/me/tnc?consent=loanSignService', { fixture: 'loan/fpl/singServicePage-reAssessmentFeeChargedtncloanSign.json' })
        cy.intercept('GET', '**/me/otp?reason=**', { fixture: 'loan/fpl/signServicePage-reAssessmentFeeChargedOTPReason.json' })
        cy.intercept('POST', '**/me/otp?reason=**', { fixture: 'loan/fpl/signServicePage-reAssessmentFeeChargedOTPReasonPost.json' })
        cy.intercept('GET', '**/me/autodebit?source=**', { fixture: 'loan/fpl/loanApplicationSubmittedPage-reAssessmentFeeChargedAutodebit.json' }).as('loanApplicationPage')
        cy.intercept('PUT', '**/me/loan', { fixture: 'loan/fpl/loanApplicationSubmittedPage-reAssessmentFeeChargedLoan.json' })
        cy.intercept('GET', '**/me/vkycNudgeStatus?type=loancreate', { fixture: 'loan/fpl/loanApplicationSubmittedPage-vkycNudget.json' })
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        selectBankAccountPage.cllickBankContinueBtn()
        homePage.verifyGetNowBtn('GET NOW')
        homePage.clickGetNowBtn()
        fplPage.verifyPageTitle('Flexi Personal Loan')
        fplLoanAmountDetailsPage.clickgetNowBtn()
        fplPage.clickContinueBtn()
        fplLoanAmountTenurePage.verifyViewSummaryAndChargesText('View Summary & charges')
        fplLoanAmountTenurePage.verifySelectLoanAmountLabel('Select Loan Amount:')
        fplLoanAmountTenurePage.clickViewSummaryAndChargesBtn()
        fplLoanAmountDetailsPage.verifyRepaymentShedulePageBtn()
        fplLoanAmountDetailsPage.clickViewRepaymentScheduleBtn()
        csrDownloadPage.clickOnContinueBtn()
        loanPurposePage.selectLoanPurpose('Shopping')
        loanPurposePage.clickContinueBtn()
        selectBankAccountPage.verifyPageTitle('Bank Accounts')
        selectBankAccountPage.clickContinueBtn()
        signLoanDocumentPage.clickContinueBtnDigitalSign()
        signDocumentPage.clickContinueBtn()
        signServiceOTPInputPage.clickSubmitBtn()
        signServiceOTPInputPage.clickSubmitBtn()
        otpInputPage.enterOTPSignService('123456')
        cy.wait('@loanApplicationPage')
        loanApplicationSubmittedPage.verifyLoanAmountLabel('Loan Amount')
        loanApplicationSubmittedPage.verifyLoanProcessedLabel('Your loan will be processed in    1 hour  ')
        loanApplicationSubmittedPage.verifyCompleteVKYCText('Complete your Video KYC to get higher limit')
    })
    it('KB-T63352 Check if the user has never taken Gold where the amount greater then 5 Rs & Gold feature is enabled globally & and user falling under rollout but user vkyc is enable then on clicking OK CTA from the EMI successful screen user should redirect to VKYC Nudge', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
    it('KB-T63479 Check user has never visited EM least once & Expense Tracker feature is "disabled "& user falling under rollout then on Clicking OK CTA from the EMI successful screen user should redirect to next applicable nudge module based on the priority set in DB', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
    it('KB-T63480 Check user has never visited EM at least once & Expense Tracker feature is enabled & "user not falling under rollout "then on Clicking OK CTA from the EMI successful screen user should redirect to next applicable nudge module based on priority set in DB', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
    // payment gateway
    it('KB-T64426 When current installment is overdue but next installment is not overdue then Nudge should be display', ()=>{
        cy.intercept('GET', '**/home', {fixture: 'home/homePage-firstInstallOverDue.json'})
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
    it('KB-T64427 When current installment is overdue but next installment is also overdue then Nudge should not display', ()=>{
        cy.intercept('GET', '**/home', {fixture: 'home/homePage-firstInstallOverDue.json'})
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
       
    })
    //sme flow -FIREBASE RELATED
     it('KB-T70289 Verifying the SME card limit, CTA on pre-confirmation page for New users (don\'t have profile) when global config is enabled.', () => {
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-SMEcardCTApreconfirmation.json' }).as('homePage')
        cy.visitURL('newhome')
        cy.wait('@homePage')
        homePage.verifyContinueApplicationBtnText('Continue Application')
        homePage.verifyMiniBusinessLoanText('Business Loan')
        homePage.verifyBusinnesLoanIcon('https://ik.imagekit.io/kreditbee/app-static/misc/new/ic-wcl.svg')
        homePage.verifyBlock3Btn('KNOW MORE')
        homePage.clickBlock3Btn()
        applicationStatusPage.verifyPageTitle('BUSINESS LOAN')
        flexiPersonalLoanInfoPage.verifyDocumentsLabel('DOCUMNETS')
        flexiPersonalLoanInfoPage.verifyEligibilityCriteriaLabel('ELIGIBILITY CRITERIA')
        flexiPersonalLoanInfoPage.verifyLoanAmountLabel('LOAN AMOUNT:')
        flexiPersonalLoanInfoPage.verifyTenureLabel('TENURE:')
        homePage.verifyContinueApplicationBtnText('Continue Application ')
    })
    it('KB-T70292 Verifying the SME card limit, CTA on pre-confirmation page for New users (don\'t have profile) when global config is disabled.', () => {
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-SMEeligablconfigdisable.json' })
        cy.visitURL('newhome')
        homePage.verifyContinueApplicationBtnText('Continue Application')
        homePage.verifyBusinnesLoanIconNotExist()
        applicationStatusPage.verifyCheckOutPurchaseLoanValueNotExist()
        homePage.verifyBusinnesLoanIconNotExist()
    })
    it('KB-T69052 Ensure checkout product is displaying proper order when locked and unlocked priority is set.', () => {
        cy.intercept('GET', '**/home', { fixture: 'home/homePage-unLockedPriorityOrderSME.json' }).as('getHomePage')
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyFPLLabel('Flexi Personal Loan')
        homePage.verifyTenureUptoMonthsText('Tenure up to 4 months')
        homePage.verifyGetNowBtn('GET NOW')
        homePage.verifyTenureUptoMonthsTextforFPL('Tenure up to 12 months')
        homePage.verifyPersonalLoanLabel('Personal Loan - Salaried')
        homePage.verifyBusinessLoanAmountLabel('2,00,000')
        homePage.verifyApplyNowText('APPLY NOW')
    })

    it('KB-T65837 [Help] Check on clicking help from Home page', () =>{
        cy.intercept('GET', '**/home', {fixture: 'home/homePage-GOLDNBFailedauto2.json'}).as('getHomePage')
        // cy.intercept('GET', '**/myaccount', {fixture: 'accounts/accountPage-checkHelp.json'})
        cy.intercept('GET', '**/contactus/rule?categoryId=r_faq', {fixture: 'accounts/accountPage-checkHelContactus.json'}).as('getHelpPage')
        cy.intercept('GET', '**/faq/feedback', {fixture: 'accounts/accountPage-checkHelpFAQ.json'})
        cy.visitURL('newhome')
        headerPage.verifyHelpIcon('https://ik.imagekit.io/kreditbee/app-static/misc/ic_help.svg')
        headerPage.clickHelpBtn()
        cy.wait('@getHelpPage')
        helpPage.verifyHihowcanwehelpText("Hi, how can we help?")
        helpPage.verifyFAQsText('FAQs')
        faqPage.verifyDocumentsLable('DocumentsProfile VerificationRepaymentTechnical IssuesInterest Rate & Processing FessCredit LimitPenalty24K GoldReferral & KreditBee PointsHealthcare')
    })
    it('KB-T65838 [Help] Check on clicking help from My Accounts page', () =>{
        cy.intercept('GET', '**/home', {fixture: 'home/homePage-GOLDNBFailedauto2.json'}).as('getHomePage')
        cy.intercept('GET', '**/myaccount', {fixture: 'accounts/accountPage-checkHelp.json'})
        cy.intercept('GET', '**/contactus/rule?categoryId=r_faq', {fixture: 'accounts/accountPage-checkHelContactus.json'})
        cy.intercept('GET', '**/faq/feedback', {fixture: 'accounts/accountPage-checkHelpFAQ.json'})
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyGetNowBtn('GET NOW')
        footerPage.clickAccountLabel()
        accountsPage.verifyDiscountAndCreditLabel('Discount & Credit')
        accountsPage.verifyVideoVerificationText('Video Verification')
        accountsPage.clickHelpText()
        helpPage.verifyHihowcanwehelpText("Hi, how can we help?")
        helpPage.verifyFAQsText('FAQs')
        faqPage.verifyDocumentsLable('DocumentsProfile VerificationRepaymentTechnical IssuesInterest Rate & Processing FessCredit LimitPenalty24K GoldReferral & KreditBee PointsHealthcare')
    })
    // Profile flow
    // clicking pan give reload error
    it.skip('KB-T38613 Ensure that " Ensure the you are either uploading or capturing clear photos of original document" description is displayed in the PAN upload screen', () =>{
        cy.intercept('GET', '**/home', {fixture: 'home/homePage-PANClearPicture.json'}).as('getHomePage')
        cy.intercept('GET', '**/me/substateinfo', {fixture: 'aadhaarEkyc/aadharEkycPage-PANClearPicturesusbState.json'})
        cy.intercept('GET', '**/me', {fixture: 'aadhaarEkyc/aadharEkycPage-PANClearPictureMe.json'})
        cy.intercept('GET', '**//me?type=thumbnail', {fixture: 'aadhaarEkyc/aadharEkycPage-PANClearPictureMeThumbnail.json'})
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyContinueApplicationBtnText('Continue Application')
        homePage.clickContinueApplicationBtn()
        cy.wait(2000)
        // kycDocumentsPage.verifyPageTitle('Profile')
        profileInformationPage.clickKYCDocumentsLabel()
        kycDocumentsPage.verifyPageTitle('KYC documents')
        kycDocumentsPage.clickPANCardBtn()
        kycDocumentsPage.verifyUploadPANLabel('Upload PAN')
        kycDocumentsPage.verifyEnsureClearPictureText('Ensure that you are either uploading or capturing clear photos of original documents.')
    })
    it.skip('KB-T38781 Ensure that Gallery option should be displayed to the user after clicking on Upload button from Image file upload option', () =>{
        cy.intercept('GET', '**/home', {fixture: 'home/homePage-PANClearPicture.json'}).as('getHomePage')
        cy.intercept('GET', '**/me/substateinfo', {fixture: 'aadhaarEkyc/aadharEkycPage-PANClearPicturesusbState.json'})
        cy.intercept('GET', '**/me', {fixture: 'aadhaarEkyc/aadharEkycPage-PANClearPictureMe.json'})
        cy.intercept('GET', '**//me?type=thumbnail', {fixture: 'aadhaarEkyc/aadharEkycPage-PANClearPictureMeThumbnail.json'})
        cy.visitURL('newhome')
        cy.wait('@getHomePage')
        homePage.verifyContinueApplicationBtnText('Continue Application')
        homePage.clickContinueApplicationBtn()
        kycDocumentsPage.verifyPageTitle('Profile')
        profileInformationPage.clickKYCDocumentsLabel()
        kycDocumentsPage.verifyPageTitle('KYC documents')
        kycDocumentsPage.clickPANCardBtn()
        kycDocumentsPage.verifyUploadPANLabel('Upload PAN')
        kycDocumentsPage.verifyEnsureClearPictureText('Ensure that you are either uploading or capturing clear photos of original documents.')
        kycDocumentsPage.clickUploadFrontLabel()
        kycDocumentsPage.verifyUploadFromGalleryLabel('Upload from gallery')
        kycDocumentsPage.verifySelectMethodtoUploadLabel('Select a method to upload')
    })
    it('KB-T63450 Check if the user has ever taken CSR direct (Not loan linked) But if user is NTC & csr feature is enabled globally & user falling under rollout also then on Clicking OK CTA from the EMI successful screen user should redirect to applicable & priority offer', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
    it('KB-T63451 Check if the user has ever taken CSR direct (Not loan linked) But if the user not completed the no of success days and csr feature is enabled globally & user falling under rollout then clicking on OK CTA user should redirect to applicable & priority offer', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
    it('KB-T63452 Check if the user has taken CSR direct (Not loan linked) But if user not completed the no of failed days and CSR feature is enabled globally & user falling under rollout then clicking OK CTA from emi successful screen user should redirect to next sequence', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
    it('KB-T63471 Check if user has never taken Insurance - direct (Not loan linked) & Insurance feature is disbaled globally & the user falling under rollout then on Clicking OK CTA from the EMI successfull screen user should redirect to applicable & priority offer nudge', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    }) 
    it('KB-T63472 Check if the user has never taken Insurance - direct (Not loan linked) & Insurance feature is enabled globally & the user not falling under rollout then on Clicking OK CTA from the EMI successfull screen user should redirect to applicable & priority offer', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
    it('KB-T63649 Check if the user has ever taken Insurance - direct (Not loan linked) & Insurance feature is enabled globally and the user falling under rollout then on Clicking OK CTA from the EMI successful screen user should redirect to applicable and priority nudge.', ()=>{       
        cy.intercept('GET', '**/home', { fixture: '/home/homePage-PartialPaymentNotDisplay-S53.json' })
        cy.intercept('GET', '**/me/loans', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoans.json'})
        cy.intercept('GET', '**/me/loan?id=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansLoanId.json'})
        cy.intercept('GET', '**/pg/me/payment?v=**', {fixture: 'repayments/repaymentPage-firstInstallOverDueLoansPayments.json'})
        cy.visitURL('newhome')
        homePage.verifyPayNowText('PAY NOW')
        homePage.clickPayNowBtn()
        
        repaymentPage.verifyPayNowText('PAY NOW')
        repaymentPage.verifyOverDueSinceLabel('Overdue since')
        repaymentPage.clickPayNowBtn()
        paymentOptionPage.verifyPageTitle('Payment Option')
        paymentOptionPage.verifyDebitCardText('Debit Card')
        paymentOptionPage.clickDebitCardText()
        paymentOptionPage.verifyPayWithDebitCardBtn('Pay with Debit Card')
    })
})
